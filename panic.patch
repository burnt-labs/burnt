diff --git a/x/dungeon/ibc_middleware.go b/x/dungeon/ibc_middleware.go
index 8e64702..5732cd0 100644
--- a/x/dungeon/ibc_middleware.go
+++ b/x/dungeon/ibc_middleware.go
@@ -8,6 +8,7 @@ import (
 	transfertypes "github.com/cosmos/ibc-go/v4/modules/apps/transfer/types"
 	porttypes "github.com/cosmos/ibc-go/v4/modules/core/05-port/types"
 	"github.com/cosmos/ibc-go/v4/modules/core/exported"
+	"log"
 )

 type IBCMiddleware struct {
@@ -44,6 +45,7 @@ func (im IBCMiddleware) SendPacket(
 		// not have a transfer module, or c) the transfer module has been modified
 		// to accept other Packets. The best thing we can do here is pass the packet
 		// on down the stack.
+		panic("IBC packet was not deserialized to FungibleTokenPacketData")
 		return im.keeper.SendPacket(ctx, chanCap, packet)
 	}

@@ -52,12 +54,15 @@ func (im IBCMiddleware) SendPacket(

 		// if the denomination of the token being sent is our bond token, block it
 		if data.Denom == im.keeper.stakingKeeper.BondDenom(ctx) {
+			panic("this should be a success")
 			return types.ErrTokenTransferBlocked
 		}

+		log.Panicf("IBC packet was FungibleTokenPacketData and originated in burnt, denom: %v", data)
 		// otherwise, send the token
 		return im.keeper.SendPacket(ctx, chanCap, packet)
 	}

+	panic("IBC packet didn't originate here")
 	return im.keeper.SendPacket(ctx, chanCap, packet)
 }
 