name: Interchain tests

on:
  push:
    branches:
      - main
    tags:
      - 'v*.*.*'

  pull_request:

env:
  CARGO_TERM_COLOR: always
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  go-build:
    permissions:
      contents: read
      packages: write
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Cache Docker layers
        uses: actions/cache@v2
        id: docker-cache
        with:
          path: /tmp/.buildx-cache
          # Key is named differently to avoid collision
          key: ${{ runner.os }}-multi-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-multi-buildx
      - name: container-login
        uses: docker/login-action@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: labels
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-heighliner
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern=v{{version}}
      - name: retrieve heighliner binary
        run: | 
          curl -O -L https://github.com/strangelove-ventures/heighliner/releases/download/v1.0.0/heighliner_1.0.0_linux_amd64.tar.gz
          tar -xf heighliner_1.0.0_linux_amd64.tar.gz
          ./heighliner build -c burnt --local

      - name: push heighliner image to github repo
        run: |
          docker images
          docker tag burnt:local ${{ steps.meta.outputs.tags }}
          docker push burnt:local

      - name: Move Docker cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

  interchain-tests:
    environment: CI
    runs-on: ubuntu-latest
    needs: [ go-build ]
    strategy:
      fail-fast: false
      matrix:
        test_type: [
          "DungeonTransferBlock",
        ]

    steps:
      - name: Set up Go 1.18
        uses: actions/setup-go@v2
        with:
          go-version: ^1.18
      - name: checkout
        uses: actions/checkout@v2
      - name: go-cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('module/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      - name: container-login
        uses: docker/login-action@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: docker burnt metadata
        id: meta-burnt
        uses: docker/metadata-action@v3
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-heighliner
      - name: pull burnt image
        run: docker pull ${{ steps.meta-burnt.outputs.tags }}
      - name: rename burnt image
        run: docker tag ${{ steps.meta-burnt.outputs.tags }} burnt:prebuilt
      - name: clean slate
        run: make e2e_clean_slate
      - name: build go test binary
        run: cd integration_tests && go test -c
      - name: Run all up ci test
        run: ./integration_tests/integration_tests.test -test.failfast -test.v -test.run IntegrationTestSuite -testify.m Test${{ matrix.test_type }}
        env:
          E2E_SKIP_CLEANUP: true
          BURNT_IMAGE: burnt:prebuilt

